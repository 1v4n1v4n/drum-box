{"version":3,"sources":["context/globalContext.js","components/buttons/Button.js","components/buttons/ButtonsGrid.js","components/switch/ToggleSwitch.js","components/switch/VolumeSlider.js","components/buttons/FontAweBtns.js","components/Footer.js","context/globalReducer.js","types.js","context/GlobalState.js","App.js","index.js"],"names":["globalContext","createContext","Button","id","letter","src","audio","useContext","GlobalContext","useEffect","document","addEventListener","handleKeyDown","removeEventListener","e","keyCode","charCodeAt","checked","getElementById","volume","buttonId","style","backgroundColor","setTimeout","play","currentTime","onClick","className","ref","data","ButtonsGrid","map","d","key","ToggleSwitch","useState","setChecked","onChange","getChecked","VolumeSlider","setVolume","value","Math","round","orientation","getVolume","max","step","tooltip","FontAweBtns","openUrl","url","window","open","visibility","Footer","href","state","action","type","payload","GlobalState","props","useReducer","GlobalReducer","dispatch","a","Provider","children","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ca15f195.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst globalContext = createContext();\r\n\r\nexport default globalContext;\r\n","import React, { useEffect, useContext, Fragment } from 'react';\r\nimport GlobalContext from '../../context/globalContext';\r\n\r\nconst Button = ({ id, letter, src, audio }) => {\r\n\tconst globalContext = useContext(GlobalContext);\r\n\r\n\tuseEffect(() => {\r\n\t\t// mimics componentDidMount\r\n\t\tdocument.addEventListener('keydown', handleKeyDown);\r\n\r\n\t\treturn () => {\r\n\t\t\t// mimics componentWillUnmount\r\n\t\t\tdocument.removeEventListener('keydown', handleKeyDown);\r\n\t\t};\r\n\t});\r\n\r\n\tconst handleClick = () => {\r\n\t\t// playing audio if the drum box is on\r\n\t\tif (globalContext.checked) {\r\n\t\t\t// getting the audio volume from the global state\r\n\t\t\tdocument.getElementById(letter).volume = globalContext.volume;\r\n\r\n\t\t\t// changing button color on key pressed\r\n\t\t\tvar buttonId = document.getElementById(id);\r\n\t\t\tbuttonId.style.backgroundColor = 'darksalmon';\r\n\t\t\tsetTimeout(() => (buttonId.style.backgroundColor = 'azure'), 100);\r\n\r\n\t\t\t// playing audio\r\n\t\t\taudio.play();\r\n\t\t\taudio.currentTime = 0;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tif (e.keyCode === letter.charCodeAt() && globalContext.checked) {\r\n\t\t\t// getting the audio volume from the global state\r\n\t\t\tdocument.getElementById(letter).volume = globalContext.volume;\r\n\r\n\t\t\t// changing button color on key pressed\r\n\t\t\tvar buttonId = document.getElementById(id);\r\n\t\t\tbuttonId.style.backgroundColor = 'darksalmon';\r\n\t\t\tsetTimeout(() => (buttonId.style.backgroundColor = 'azure'), 100);\r\n\r\n\t\t\t// playing audio\r\n\t\t\taudio.play();\r\n\t\t\taudio.currentTime = 0;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<button onClick={handleClick} id={id} letter={letter} src={src}>\r\n\t\t\t\t{letter}\r\n\t\t\t</button>\r\n\t\t\t<audio\r\n\t\t\t\tid={letter}\r\n\t\t\t\tclassName='clip'\r\n\t\t\t\tsrc={src}\r\n\t\t\t\tref={ref => (audio = ref)}\r\n\t\t\t></audio>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst ButtonsGrid = () => {\r\n\treturn (\r\n\t\t<div id='buttons-grid'>\r\n\t\t\t{data.map(d => (\r\n\t\t\t\t<Button key={d.id} id={d.id} letter={d.letter} src={d.src} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// needed list for importing audios\r\nconst data = [\r\n\t{\r\n\t\tid: 'Snare',\r\n\t\tletter: 'Q',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n\t},\r\n\t{\r\n\t\tid: 'Bass 1',\r\n\t\tletter: 'W',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n\t},\r\n\t{\r\n\t\tid: 'Bongo',\r\n\t\tletter: 'E',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n\t},\r\n\t{\r\n\t\tid: 'Tom Tom',\r\n\t\tletter: 'A',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\r\n\t},\r\n\t{\r\n\t\tid: 'Bass 3',\r\n\t\tletter: 'S',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\r\n\t},\r\n\t{\r\n\t\tid: 'Shotgun',\r\n\t\tletter: 'D',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n\t},\r\n\t{\r\n\t\tid: 'High Hat',\r\n\t\tletter: 'Z',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\r\n\t},\r\n\t{\r\n\t\tid: 'Drum Hit',\r\n\t\tletter: 'X',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\r\n\t},\r\n\t{\r\n\t\tid: 'Laser',\r\n\t\tletter: 'C',\r\n\t\tsrc: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\r\n\t},\r\n];\r\n\r\nexport default ButtonsGrid;\r\n","import React, { useState, useContext } from 'react';\r\nimport Switch from 'react-switch';\r\nimport GlobalContext from '../../context/globalContext';\r\n\r\nconst ToggleSwitch = () => {\r\n\t// mimics state and setState()\r\n\tconst [checked, setChecked] = useState(true);\r\n\tconst globalContext = useContext(GlobalContext);\r\n\r\n\tconst onChange = checked => {\r\n\t\tsetChecked(checked);\r\n\t\t// passing the switch state(checked) in global context\r\n\t\tglobalContext.getChecked(checked);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<label id='switch'>\r\n\t\t\t<span>Power</span>\r\n\t\t\t<Switch onChange={onChange} checked={checked} id='switch-handle' />\r\n\t\t</label>\r\n\t);\r\n};\r\n\r\nexport default ToggleSwitch;\r\n","import React, { useState, useContext } from 'react';\r\nimport Slider from 'react-rangeslider';\r\nimport GlobalContext from '../../context/globalContext';\r\n\r\nconst VolumeSlider = () => {\r\n\tconst [volume, setVolume] = useState(1.0);\r\n\tconst globalContext = useContext(GlobalContext);\r\n\r\n\tconst handleOnChange = volume => {\r\n\t\tsetVolume(volume);\r\n\t\tglobalContext.getVolume(volume);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id='slider'>\r\n\t\t\t<span>Volume</span>\r\n\t\t\t<Slider\r\n\t\t\t\tvalue={Math.round(volume * 100) / 100}\r\n\t\t\t\torientation='horizontal'\r\n\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\tmax={1.0}\r\n\t\t\t\tstep={0.01}\r\n\t\t\t\ttooltip={false}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default VolumeSlider;\r\n","import React from 'react';\r\n\r\nconst FontAweBtns = () => {\r\n\tconst postTwitter = () =>\r\n\t\topenUrl(\r\n\t\t\t'https://twitter.com/intent/tweet?hashtags=drum,machine&text=Check out this cool drum machine! https://1v4n1v4n.github.io/drum-box/'\r\n\t\t);\r\n\r\n\tconst openUrl = url => {\r\n\t\twindow.open(\r\n\t\t\turl,\r\n\t\t\t'Share',\r\n\t\t\t'width=550, height=400, toolbar=0, scrollbars=1 ,location=0 ,statusbar=0,menubar=0, resizable=0'\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<div id='font-buttons'>\r\n\t\t\t<button onClick={postTwitter}>\r\n\t\t\t\t<i className='fab fa-twitter' /> Tweet\r\n\t\t\t</button>\r\n\t\t\t<span style={{ visibility: 'hidden' }}>i</span>\r\n\t\t\t<button>\r\n\t\t\t\t<i className='fab fa-facebook' /> Share\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FontAweBtns;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<a id='footer' href='https://github.com/1v4n1v4n'>\r\n\t\t\t\t<span>by 1v4n</span>\r\n\t\t\t</a>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import { GET_CHECKED, GET_VOLUME } from '../types';\r\n\r\nexport default (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_CHECKED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tchecked: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase GET_VOLUME:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvolume: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","export const GET_CHECKED = 'GET_CHECKED';\r\nexport const GET_VOLUME = 'GET_VOLUME';\r\n","import React, { useReducer } from 'react';\r\nimport GlobalContext from './globalContext';\r\nimport GlobalReducer from './globalReducer';\r\nimport { GET_CHECKED, GET_VOLUME } from '../types';\r\n\r\nconst GlobalState = props => {\r\n\tconst initialState = { checked: true, volume: 1.0 };\r\n\r\n\tconst [state, dispatch] = useReducer(GlobalReducer, initialState);\r\n\r\n\t// Search Users\r\n\tconst getChecked = async checked => {\r\n\t\tdispatch({ type: GET_CHECKED, payload: checked });\r\n\t};\r\n\r\n\tconst getVolume = async volume => {\r\n\t\tdispatch({ type: GET_VOLUME, payload: volume });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GlobalContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tchecked: state.checked,\r\n\t\t\t\tvolume: state.volume,\r\n\t\t\t\tgetChecked,\r\n\t\t\t\tgetVolume,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</GlobalContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default GlobalState;\r\n","import React from 'react';\nimport './style/App.css';\nimport ButtonsGrid from './components/buttons/ButtonsGrid';\nimport ToggleSwitch from './components/switch/ToggleSwitch';\nimport VolumeSlider from './components/switch/VolumeSlider';\nimport FontAweBtns from './components/buttons/FontAweBtns';\nimport Footer from './components/Footer';\nimport GlobalState from './context/GlobalState';\n\nconst App = () => {\n\treturn (\n\t\t<GlobalState>\n\t\t\t<div className='container'>\n\t\t\t\t<div id='drum-pad'>\n\t\t\t\t\t<ButtonsGrid />\n\t\t\t\t\t<ToggleSwitch />\n\t\t\t\t\t<VolumeSlider />\n\t\t\t\t\t<FontAweBtns />\n\t\t\t\t\t<Footer />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</GlobalState>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}